services:
  api:
    image: ${DOCKER_USERNAME}/devoops-api:latest
    container_name: minitwit_api
    env_file:
      - .env
    networks:
      - elk
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7070" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    expose:
      - '7070'
  app:
    image: ${DOCKER_USERNAME}/devoops-app:latest
    container_name: minitwit_app
    environment:
      ENDPOINT: "http://172.17.0.1:7070"
    ports:
      - '8080:8080'
    networks:
      - elk
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: 8.12.2
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped
    expose:
      - '9200' # Main Elasticsearch input

  filebeat:
    extends:
      file: ./filebeat/filebeat-compose.yml
      service: filebeat

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    expose:
      - '3000'

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: 8.12.2
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    restart: unless-stopped
    expose:
      - '5601' # Kibana UI Dashboard

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: 8.12.2
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    environment:
      LS_JAVA_OPTS: -Xms512m -Xmx512m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk
    restart: unless-stopped
    expose:
      - '5044' # Beats input

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    expose:
      - '9090' # Host port 9091, container port 9090
  setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: 8.12.2
    depends_on:
      - elasticsearch
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    init: true
    profiles:
      - setup

networks:
  elk:
    driver: bridge
  main:


volumes:
  elasticsearch:
  grafana_storage: {}

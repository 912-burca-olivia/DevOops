version: "3.8"

services:
  api_test:
    build:
      context: ./itu-minitwit-api
      dockerfile: local/Dockerfile
    container_name: minitwit_api_test
    ports:
      - "9090:9090"
    environment:
      DATABASE: "/app/test_minitwit.db"
    volumes:
      - ./tests/schema.sql:/app/schema.sql # ensuring idempotency by only mounting schema
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/msgs"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  app_test:
    build:
      context: ./itu-minitwit
      dockerfile: local/Dockerfile
    container_name: minitwit_app_test
    ports:
      - "8080:8080"
    environment:
      ENDPOINT: "http://api_test:9090"
    depends_on:
      api_test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  test_runner:
    build:
      context: ./tests
      dockerfile: local/Dockerfile
    container_name: minitwit_tests
    depends_on:
      api_test:
        condition: service_healthy
      app_test:
        condition: service_healthy
    environment:
      DATABASE: ":memory:"
      SCHEMA_PATH: "/tests/schema.sql"
    volumes:
      - ./tests/schema.sql:/app/schema.sql # ensuring idempotency by only mounting schema
    command:
      [
        "/bin/sh",
        "-c",
        "python /tests/init_test_db.py && pytest --tb=short --maxfail=15",
      ]
